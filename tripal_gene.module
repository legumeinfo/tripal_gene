<?php

#require_once 'includes/tripal_gene.admin.inc';
require_once 'includes/tripal_gene.chado_node.inc';
//require_once 'theme/tripal_gene.theme.inc';



/**
 * Implements hook_menu().
 * Menu items are automatically added for the new node types created
 * by this module to the 'Create Content' Navigation menu item.  This function
 * adds more menu items needed for this module.
 *
 * @ingroup tripal_gene
 */


function tripal_gene_menu(){
    $items['basket/add/%'] = array(
    'page callback' => 'lightshop_add2basket',
    'page arguments' => array(2),
    'access callback' => TRUE,
    'access arguments' => array('use basket'),
    'type' => MENU_CALLBACK,
    'file' => 'lightshop.pages.inc',
  );
     $items['basket'] = array(
    'title' => 'Your Basket',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('lightshop_basket_form'),
    'access callback' => TRUE,
    'access arguments' => array('use basket'),
    'type' => MENU_CALLBACK,
    'file' => 'lightshop.pages.inc',
  );

   $items['basket/clear'] = array(
   'page callback' => 'drupal_get_form',
   'page arguments' => array('_lightshop_clear_confirm'),
   'access callback' => TRUE,
   'type' => MENU_CALLBACK,
   'file' => 'lightshop.pages.inc',
  );

  return $items;


}



/**
 * Implements hook_views_api().
 *
 * Essentially this hook tells drupal that there is views support for
 *  for this module which then includes tripal_db.views.inc where all the
 *  views integration code is
 *
 * @ingroup tripal_organism
 */
function tripal_gene_views_api() {
      return array( 'api' => '3.0',
      'path' => drupal_get_path('module', 'tripal_gene'). '/views', );
 }


/**
 * Implementation of hook_form_alter().
 *
 * @param $form
 * @param $form_state
 * @param $form_id
 *
 * @ingroup tripal_organism
 */
function tripal_gene_form_alter(&$form, &$form_state, $form_id) {
  // turn of preview button for insert/updates
  if ($form_id == "chado_gene_node_form") {
    $form['actions']['preview']['#access'] = FALSE;

    //remove the body field
    unset($form['body']);
  }
}


/**
 *  Implements hook_theme().
 *
 *  We need to let drupal know about our theme functions and their arguments.
 *  We create theme functions to allow users of the module to customize the
 *  look and feel of the output generated in this module
 *
 * @ingroup tripal_organism
 */
function tripal_gene_theme($existing, $type, $theme, $path) {
  $core_path = drupal_get_path('module', 'tripal_core');

  $items = array(
    'node__chado_gene' => array(
      'template' => 'node--chado-generic',
      'render element' => 'node',
      'base hook' => 'node',
      'path' => "$core_path/theme/templates",
    ),
    'tripal_gene_description' => array(
      'variables' => array('node' => NULL),
      'template' => 'tripal_gene_description',
      'path' => "$path/theme/templates",
    ),
  );
 
  return $items;
}


/**
 * Implements hook_search_biological_data_views().
 *
 * Adds the described views to the "Search Data" Page created by Tripal Views
 */
function tripal_gene_search_biological_data_views() {
  return array(
    'gene_family' => array(
      'machine_name' => 'gene_family',
      'human_name' => 'Gene Family',
      'description' => 'Gene pages with bucket',
      'link' => 'gene'
    ),
  );
}

function add2basket_link($val) {
  $build = array();
  //debug($build);
  $nid=$val->nid;
  $name=$val->gene_name;
  $pass=$nid.'-'.$name;
  if (_in_basket($nid)) {
    $build['add2basket_link'] = array(
      '#markup' => '<span class="add2basket-link">' . t('Added') . '</span>',
    );
  }
  else {
    $build['add2basket_link'] = array(
      '#type' => 'link',
      '#title' => t('Bucket'),
      '#href' => 'basket/add/'.$pass. '/nojs/',
      '#attributes' => array(
        'rel' => 'nofollow',
        'class' => array('add2basket-link'),
      ),
      '#options' => array(
        'query' => drupal_get_destination(),
      ),
      '#ajax' => array(
        'wrapper' => 'add2basket-link-' . $nid,
      ),
    );
  }
  $build['add2basket_link']['#prefix'] = '<div id="add2basket-link-' . $nid . '" class="add2basket-link-container">';
  $build['add2basket_link']['#suffix'] = '</div>';
  $build['add2basket_link']['#attached'] = array(
    'css' => array(
      drupal_get_path('module', 'tripal_gene') . '/theme/lightshop.css',
    ),
    'js' => array(
      drupal_get_path('module', 'tripal_gene') . '/theme/lightshop.js',
        ),
  );
  //debug($build);
  return render($build);
}



function _in_basket($nid) {
  return isset($_SESSION['basket']['items']) ? array_key_exists($nid, $_SESSION['basket']['items']) : FALSE;
}



/**
 * Implements hook_block_view().
 */
function lightshop_block_view() {
  if (!user_access('use basket')) {
    return;
  }
  $block = array();
  $block['subject'] = t('Your Basket');
  $block['content'] = lightshop_block_content();
  return $block;
}



/**
 * Basket block content.
 */
function lightshop_block_content() {
  $content[] = array(
    '#theme' => 'lightshop_block_display',
    '#prefix' => '<div  id="lightshop-ajax-block-content">',
    '#suffix' => '</div>',
  );
  return $content;
}

function lightshop_menu_alter(&$items) {
  $type = str_replace('_', '-', LIGHTSHOP_ORDER_NODETYPE);
  $items['node/add/' . $type]['access callback'] = FALSE;
}




function lightshop_block_info() {
  $block['basket'] = array(
    'info' => t('Light Shop: Basket Content'),
    'cache' => DRUPAL_NO_CACHE,
    'visibility' => BLOCK_VISIBILITY_NOTLISTED,
    'pages' => "basket",
  );
  return $block;
}

/**
 * Implements hook_ajax_render_alter().
 */
function lightshop_ajax_render_alter(&$commands) {
  // Inject any new status messages into the content area.
  $commands[] = ajax_command_prepend('#block-system-main',
    '<div class="messages-ajax">' . theme('status_messages') . '</div>'
  );
}

/**
 * Implements template_preprocess_page().
 */
function lightshop_preprocess_page(&$vars) {
  if (arg(0) == 'basket') {
    $vars['title_prefix'][]['#markup'] = '<div id="lightshop-page-title">';
    $vars['title_suffix'][]['#markup'] = '</div>';
  }
}

function lightshop_check_empty_basket($form, $form_state) {
  if (!isset($_SESSION['basket']['items'])
    || empty($_SESSION['basket']['items'])
  ) {
    form_set_error('', t('Incorrect form'));
  };
}

