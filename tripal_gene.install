<?php
/**
 * Implements hook_requirements().
 *
 * @ingroup tripal_gene
 */
function tripal_gene_requirements($phase) {
  $requirements = array();
  if ($phase == 'install') {
    // make sure chado is installed
    if (!$GLOBALS["chado_is_installed"]) {
      $requirements ['tripal_gene'] = array(
          'title' => "tripal_gene",
          'value' => "ERROR: Chado must be installed before this module can be enabled",
          'severity' => REQUIREMENT_ERROR,
      );
    }
  }
  return $requirements;
}

/**
 * Implements hook_install()
 * Allows installation of the tripal_gene module
 */

function tripal_gene_install() {
   // add the materializedviews
   tripal_gene_add_mview();
  
    $mview_id =  tripal_get_mview_id('gene');   
  
    tripal_populate_mview($mview_id);

}

/**
 * Implementation of hook_uninstall().
 */
function tripal_gene_uninstall() {

  // Drop the MView table if it exists
  $mview_id =  tripal_get_mview_id('gene');
  if ($mview_id) {
    tripal_delete_mview($mview_id);
  }

}



function tripal_gene_add_mview(){
  //Materialized view addition
  
  $sql_query="select gene1.*, feature.name as coordinates, familyprop.value as gene_family, noteprop.value as description from
    (select 
       nf.nid as nid, 
       F.feature_id as gene_id,
       O.organism_id,             
       Floc.srcfeature_id,
       O.common_name,
       F.name,
       F.uniquename,
       Floc.fmax as stop,
       Floc.fmin as start,
       Floc.strand from feature F,
       featureloc Floc,
       organism O,
       cvterm CVT,
       chado_feature nf,
       cv CV where
       F.feature_id=nf.feature_id and
       F.organism_id=O.organism_id and
       F.feature_id=Floc.feature_id and
       F.type_id=CVT.cvterm_id and
       CVT.name='gene' and
       CVT.cv_id=CV.cv_id and
       CV.name='sequence'    
   ) as gene1                        
  inner join feature on            
  feature.feature_id=gene1.srcfeature_id
  left join featureprop noteprop on
  noteprop.feature_id=gene1.gene_id and noteprop.type_id=(select cvterm_id from cvterm t, cv where t.name='Note' and t.cv_id=cv.cv_id and cv.name='feature_property')
  left join featureprop familyprop on                                                                                                                                
  familyprop.feature_id=gene1.gene_id and familyprop.type_id=(select cvterm_id from cvterm t, cv where t.name='gene family' and t.cv_id=cv.cv_id and cv.name='LIS_properties')";

    //Table gene description

     $schema = array (
    'table' => 'gene',
     'fields' => array(
      'nid' => array(
        'type' => 'int',
        'not null' => FASLE,
      ),
      'gene_id' => array(
        'type' => 'int',
        'not null' => FASLE,
      ),
      'organism_id' => array(
        'type' => 'int',
        'not null' => FALSE,
      ),
      'srcfeature_id' => array(
        'type' => 'int',
        'not null' => FALSE,
      ),
      'common_name' => array(
        'type' => 'text',
        'not null' => FALSE,
      ),   
      'name' => array(
        'type' => 'text',
        'not null' => FALSE,
      ),
      'uniquename' => array(
        'type' => 'text',
        'not null' => FALSE,
      ),
      'stop' => array(
        'type' => 'int',
        'not null' => TRUE, 
      ),
      'start' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'strand' => array(
        'type' => 'int',
        'not null' => TRUE,
      ),
      'coordinate' => array(
        'type' => 'text',
        'not null' => FALSE,
      ),
      'gene_family' => array(
        'type' => 'text',
        'not null' => FALSE,
      ),
      'description' => array(
        'type' => 'text',
        'not null' => FALSE,
      ),
   ),
   'primary key' => array('gene_id'),
   'indexes' => array(
      'gene_indx0' => array('common_name'),
      'gene_indx2' => array('name'),
    ),
  );

   // add a comment to make sure this view makes sense to the site administator
  $comment = t('This view is used to provide a table for searching Gene Pages.');
  tripal_add_mview(
    'gene', // name of materialized view
    'tripal_gene', // name of module submitting view
    $schema,      // schema api array representation
    $sql_query,         // sql query that loads the mview
    $comment );
  
  }





